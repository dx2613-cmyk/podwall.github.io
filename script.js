document.addEventListener('DOMContentLoaded', function () {
  // –î–∞–Ω–Ω—ã–µ —É—Å–ª—É–≥
  const services = [
    {
      id: 1,
      title: '–†–µ–º–æ–Ω—Ç –∫–æ–º–ø—å—é—Ç–µ—Ä–æ–≤',
      price: '–æ—Ç 1000 ‚ÇΩ',
      description: '–î–∏–∞–≥–Ω–æ—Å—Ç–∏–∫–∞, –∞–ø–≥—Ä–µ–π–¥, –∑–∞–º–µ–Ω–∞ –∫–æ–º–ø–ª–µ–∫—Ç—É—é—â–∏—Ö, —É—Å—Ç–∞–Ω–æ–≤–∫–∞ Windows, –≤–æ—Å—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∏–µ –¥–∞–Ω–Ω—ã—Ö, —É—Å—Ç–∞–Ω–æ–≤–∫–∞ –ü–û.',
      icon: 'üíª'
    },
    {
      id: 2,
      title: '–†–µ–º–æ–Ω—Ç —Ç–µ–ª–µ—Ñ–æ–Ω–æ–≤',
      price: '–æ—Ç 800 ‚ÇΩ',
      description: '–ó–∞–º–µ–Ω–∞ –¥–∏—Å–ø–ª–µ–µ–≤, –±–∞—Ç–∞—Ä–µ–π, –∫–Ω–æ–ø–æ–∫, –ø—Ä–æ—à–∏–≤–∫–∞. –†–∞–±–æ—Ç—ã —Å Android –∏ iPhone.',
      icon: 'üì±'
    },
    {
      id: 3,
      title: '–†–µ–º–æ–Ω—Ç –æ—Ä–≥—Ç–µ—Ö–Ω–∏–∫–∏',
      price: '–æ—Ç 900 ‚ÇΩ',
      description: '–†–µ–º–æ–Ω—Ç –ú–§–£, —Å–∫–∞–Ω–µ—Ä–æ–≤, –ª–∞–∑–µ—Ä–Ω—ã—Ö –∏ —Å—Ç—Ä—É–π–Ω—ã—Ö –ø—Ä–∏–Ω—Ç–µ—Ä–æ–≤.',
      icon: 'üñ®Ô∏è'
    },
    {
      id: 4,
      title: '–†–µ–º–æ–Ω—Ç –º–æ–Ω–∏—Ç–æ—Ä–æ–≤',
      price: '–æ—Ç 1000 ‚ÇΩ',
      description: '–î–∏–∞–≥–Ω–æ—Å—Ç–∏–∫–∞, –∑–∞–º–µ–Ω–∞ –º–∞—Ç—Ä–∏—Ü—ã, –ø–ª–∞—Ç—ã, —Ä–µ–º–æ–Ω—Ç –∏–Ω–≤–µ—Ä—Ç–æ—Ä–æ–≤.',
      icon: 'üñ•Ô∏è'
    },
    {
      id: 5,
      title: '–ó–∞–ø—Ä–∞–≤–∫–∞ –∫–∞—Ä—Ç—Ä–∏–¥–∂–µ–π',
      price: '–æ—Ç 400 ‚ÇΩ',
      description: '–ó–∞–ø—Ä–∞–≤–∫–∞ –∏ –≤–æ—Å—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∏–µ –∫–∞—Ä—Ç—Ä–∏–¥–∂–µ–π –ª–∞–∑–µ—Ä–Ω—ã—Ö –∏ —Å—Ç—Ä—É–π–Ω—ã—Ö –ø—Ä–∏–Ω—Ç–µ—Ä–æ–≤.',
      icon: 'üñ®Ô∏è'
    }
  ];

  // –ì–µ–Ω–µ—Ä–∞—Ü–∏—è –∫–∞—Ä—Ç–æ—á–µ–∫ —É—Å–ª—É–≥
  function renderServices() {
    const servicesContainer = document.getElementById('services-container');
    if (servicesContainer) {
      servicesContainer.innerHTML = services.map(service => `
        <div class="bg-white rounded-2xl shadow-lg hover:shadow-2xl transition-all duration-300 transform hover:-translate-y-2 border border-gray-100 overflow-hidden">
          <div class="p-8">
            <div class="flex items-center mb-4">
              <div class="w-12 h-12 bg-gradient-to-r from-blue-600 to-purple-600 rounded-xl flex items-center justify-center mr-4">
                <span class="text-white text-2xl">${service.icon}</span>
              </div>
              <h3 class="text-xl font-bold text-gray-900">${service.title}</h3>
            </div>
            
            <p class="text-gray-600 mb-6 leading-relaxed">${service.description}</p>
            
            <div class="flex items-center justify-between">
              <span class="text-2xl font-bold text-blue-600">${service.price}</span>
              <button class="bg-gradient-to-r from-blue-600 to-purple-600 text-white px-6 py-2 rounded-lg font-semibold hover:shadow-md transition-shadow order-btn" data-service="${service.title}">
                –ó–∞–∫–∞–∑–∞—Ç—å
              </button>
            </div>
          </div>
        </div>
      `).join('');
    }
  }

  // –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –º–æ–±–∏–ª—å–Ω–æ–≥–æ –º–µ–Ω—é
  function initMobileMenu() {
    const toggle = document.getElementById('menu-toggle');
    const menu = document.getElementById('mobile-menu');
    
    if (!toggle || !menu) return;

    toggle.addEventListener('click', () => {
      menu.classList.toggle('hidden');
    });

    // –ó–∞–∫—Ä—ã—Ç–∏–µ –º–µ–Ω—é –ø—Ä–∏ –∫–ª–∏–∫–µ –Ω–∞ —Å—Å—ã–ª–∫—É
    menu.querySelectorAll('a[href^="#"]').forEach(link => {
      link.addEventListener('click', () => {
        menu.classList.add('hidden');
      });
    });
  }

  // –ü–ª–∞–≤–Ω–∞—è –ø—Ä–æ–∫—Ä—É—Ç–∫–∞
  function scrollToSection(sectionId) {
    const element = document.getElementById(sectionId);
    if (!element) return;

    const headerHeight = document.querySelector('header').offsetHeight;
    const elementPosition = element.getBoundingClientRect().top;
    const offsetPosition = elementPosition + window.pageYOffset - headerHeight;

    window.scrollTo({
      top: offsetPosition,
      behavior: 'smooth'
    });
  }

  // –û–±—Ä–∞–±–æ—Ç–∫–∞ –∫–ª–∏–∫–æ–≤
  function initClickHandlers() {
    // –ö–Ω–æ–ø–∫–∞ "–ó–∞–∫–∞–∑–∞—Ç—å –∫–æ–Ω—Å—É–ª—å—Ç–∞—Ü–∏—é"
    document.getElementById('consult-btn')?.addEventListener('click', () => {
      scrollToSection('contact');
    });

    // –ö–Ω–æ–ø–∫–∏ "–ó–∞–∫–∞–∑–∞—Ç—å" –≤ —É—Å–ª—É–≥–∞—Ö
    document.addEventListener('click', e => {
      if (e.target.matches('.order-btn')) {
        const service = e.target.getAttribute('data-service');
        scrollToSection('contact');
        
        // –ß–µ—Ä–µ–∑ 300 –º—Å –ø—ã—Ç–∞–µ–º—Å—è –≤—ã–±—Ä–∞—Ç—å —É—Å–ª—É–≥—É
        setTimeout(() => {
          const select = document.getElementById('service');
          if (select && service) {
            // –ü—ã—Ç–∞–µ–º—Å—è –Ω–∞–π—Ç–∏ –∏ –≤—ã–±—Ä–∞—Ç—å –Ω—É–∂–Ω—ã–π option
            for (let option of select.options) {
              if (option.value === service || option.text === service) {
                select.value = option.value;
                break;
              }
            }
          }
        }, 300);
      }
    });

    // –ö–Ω–æ–ø–∫–∞ "–û—Ü–µ–Ω–∏—Ç—å –º–æ—é —Ç–µ—Ö–Ω–∏–∫—É"
    document.getElementById('tradein-btn')?.addEventListener('click', () => {
      scrollToSection('contact');
      
      // –ß–µ—Ä–µ–∑ 500 –º—Å –ø–æ—Å–ª–µ –ø—Ä–æ–∫—Ä—É—Ç–∫–∏ –≤—ã–±–∏—Ä–∞–µ–º "–í—ã–∫—É–ø –∏–ª–∏ Trade-in"
      setTimeout(() => {
        const select = document.getElementById('service');
        if (select) {
          for (let option of select.options) {
            if (
              option.text.toLowerCase().includes('–≤—ã–∫—É–ø') || 
              option.text.toLowerCase().includes('trade-in') ||
              option.text.toLowerCase().includes('–≤—ã–∫—É–ø –∏–ª–∏ trade-in')
            ) {
              select.value = option.value;
              break;
            }
          }
        }
      }, 500);
    });

    // –ü–ª–∞–≤–Ω–∞—è –ø—Ä–æ–∫—Ä—É—Ç–∫–∞ –ø–æ —Å—Å—ã–ª–∫–∞–º –≤ –Ω–∞–≤–∏–≥–∞—Ü–∏–∏
    document.querySelectorAll('a[href^="#"]:not(.order-btn)').forEach(anchor => {
      anchor.addEventListener('click', function (e) {
        e.preventDefault();
        const targetId = this.getAttribute('href').substring(1);
        scrollToSection(targetId);
      });
    });
  }

  // –ê–Ω–∏–º–∞—Ü–∏–∏ –ø—Ä–∏ —Å–∫—Ä–æ–ª–ª–µ
  let observer = null;

  function initAnimations() {
    if (observer) return;

    observer = new IntersectionObserver((entries) => {
      entries.forEach(entry => {
        if (entry.isIntersecting && !entry.target.classList.contains('animate-fade-in')) {
          entry.target.classList.add('animate-fade-in');
        }
      });
    }, {
      threshold: 0.1,
      rootMargin: '0px 0px -50px 0px'
    });

    document.querySelectorAll('section').forEach(section => {
      observer.observe(section);
    });
  }

  // –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è
  function init() {
    renderServices();
    initMobileMenu();
    initClickHandlers();
    initAnimations();
    console.log('PODWALL website initialized successfully!');
  }

  init();
});
